{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAaC,SAASC,cAAc,gBACpCC,EAAYF,SAASC,cAAc,eACnCE,EAAcH,SAASC,cAAc,iBAoB3C,SAASG,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IA7BMN,SAASC,cAAc,SAE/Ba,iBAAiB,UAAU,SAAUC,GACxCA,EAAMC,iBAKL,IAJD,IAAMC,EAAQC,OAAOnB,EAAWoB,OAC1BC,EAAOF,OAAOhB,EAAUiB,OACxBE,EAASH,OAAOf,EAAYgB,OAExBG,EAAI,EAAGA,GAAKD,EAAQC,IAC5BlB,EAAckB,EAAGL,GAASK,EAAI,GAAKF,GAChCG,MAAK,SAAAC,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MACjBmB,EAAA5B,GAAS6B,OAAOC,QAAQ,kBAAmB,qBAAoCC,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,MAAK,K,IAE3FuB,OAAM,SAAAL,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MAClBmB,EAAA5B,GAAS6B,OAAOI,QAAQ,kBAAmB,oBAAmCF,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,MAAK,K","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from \"notiflix\";\n\nconst inputDelay = document.querySelector(\"[name=delay]\");\nconst inputStep = document.querySelector(\"[name=step]\");\nconst inputAmount = document.querySelector(\"[name=amount]\");\nconst form = document.querySelector(\".form\");\n\nform.addEventListener(\"submit\", function (event) {\n  event.preventDefault();\n  const delay = Number(inputDelay.value);\n  const step = Number(inputStep.value);\n  const amount = Number(inputAmount.value);\n\n   for (let i = 1; i <= amount; i++) {\n    createPromise(i, delay + (i - 1) * step)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success('Promise Created', `Fulfilled promise ${position} in ${delay}ms`, 'OK');\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure('Promise Created', `Rejected promise ${position} in ${delay}ms`, 'OK');\n      });\n  }\n});\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import Notiflix from \"notiflix\";\n\n// const inputDelay = document.querySelector(\"[name=delay]\");\n// const inputStep = document.querySelector(\"[name=step]\");\n// const inputAmount = document.querySelector(\"[name=amount]\");\n// const form = document.querySelector(\".form\");\n\n// form.addEventListener(\"submit\", function (event) {\n//   event.preventDefault();\n//   const delay = Number(inputDelay.value);\n//   const step = Number(inputStep.value);\n//   const amount = Number(inputAmount.value);\n\n//   createPromises(amount, delay, step);\n// });\n\n// function createPromise(position, delay) {\n//   return new Promise((resolve, reject) => {\n//     const shouldResolve = Math.random() > 0.3;\n\n//     setTimeout(() => {\n//       if (shouldResolve) {\n//         resolve({ position, delay });\n//       } else {\n//         reject({ position, delay });\n//       }\n//     }, delay);\n//   });\n// }\n\n// function createPromises(amount, initialDelay, step) {\n//   for (let i = 1; i <= amount; i++) {\n//     createPromise(i, initialDelay + (i - 1) * step)\n//       .then(({ position, delay }) => {\n//         Notiflix.Report.success('Promise Created', `Fulfilled promise ${position} in ${delay}ms`, 'OK');\n//       })\n//       .catch(({ position, delay }) => {\n//         Notiflix.Report.failure('Promise Created', `Rejected promise ${position} in ${delay}ms`, 'OK');\n//       });\n//   }\n// }\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$inputDelay","document","querySelector","$ce04d3a99e08e73b$var$inputStep","$ce04d3a99e08e73b$var$inputAmount","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","delay1","Number","value","step","amount","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.f0d15581.js.map"}